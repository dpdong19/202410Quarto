{
  "hash": "793a378179eedb26dbe79526ac27b905",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring code chunks and code annotations\"\nauthor: \"Bella\"\nformat: html\n---\n\n\n\n## Hands-on: Exploring code chunks\n\n### Part 1: Code Chunks\n\nAmend the header of the following code chunks to fit their description. Below is a list of possible header options (not exhaustive). If you are using visual editor, RStudio will have auto-complete suggestions for values for each option.\n\n-   `echo`\n\n-   `label`\n\n-   `eval`\n\n-   `include`\n\n-   `output`\n\n-   `warning`\n\n-   `message`\n\n-   `error`\n\n-   `cache`\n\n-   `fig-width`\n\n-   `fig-height`\n\n-   `fig-cap`\n\n-   `fig-alt`\n\n-   `fig-align`\n\n-   `out-width`\n\n-   `out-height`\n\n-   `layout`\n\n-   `layout-ncol`\n\n-   `layout-nrow`\n\n-   `column`\n\n-   `code-fold`\n\n-   `code-summary`\n\n-   `code-overflow`\n\n-   `code-line-numbers`\n\n-   `execution-count`\n\n-   `tbl-cap`\n\n-   `tbl-colwidths`\n\n-   `df-print`\n\n-   `comments`\n\n-   `engine`\n\n-   `results`\n\n-   `collapse`\n\n**Chunk 1: Give the chunk below a label called \"basic-chunk\"**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a simple data frame\ndf <- data.frame(\n  x = 1:5,\n  y = c(2, 4, 6, 8, 10)\n)\nprint(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x  y\n1 1  2\n2 2  4\n3 3  6\n4 4  8\n5 5 10\n```\n\n\n:::\n:::\n\n\n\n**Chunk 2: make this chunk hide output and show code:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate correlation\ncor_xy <- cor(df$x, df$y)\nprint(paste(\"The correlation between x and y is:\", cor_xy))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The correlation between x and y is: 1\"\n```\n\n\n:::\n:::\n\n\n\n**Chunk 3: make this chunk show output, hide code:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean of y\nmean_y <- mean(df$y)\nprint(paste(\"The mean of y is:\", mean_y))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The mean of y is: 6\"\n```\n\n\n:::\n:::\n\n\n\n**Chunk 4: Change figure width to 6, figure height to 4, and give it a caption.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(df$x, df$y, main=\"Scatter Plot\", xlab=\"X\", ylab=\"Y\")\n```\n\n::: {.cell-output-display}\n![](04-code-chunks_files/figure-html/plot-options-1.png){width=672}\n:::\n:::\n\n\n\n**Chunk 5: Suppress warnings and messages**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)  # This usually prints a message\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n# This operation usually gives a warning\n1:3 + 1:2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in 1:3 + 1:2: longer object length is not a multiple of shorter object\nlength\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 4 4\n```\n\n\n:::\n:::\n\n\n\n### Part 2: Code annotations\n\n1.  Convert the comments inside the code chunks below into annotations. Feel free to amend the comment to your liking if you think it's not descriptive enough to the audience.\n2.  Render the result to see how it looks like.\n\n**Chunk 6:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbers <- c(10, 20, 30, 40, 50) # create a number vector\nmean_value <- mean(numbers) #Calculate the average\nprint(mean_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 30\n```\n\n\n:::\n:::\n\n\n\n**Chunk 7:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr) # load the dplyr library\n\n# Create a sample dataset\ndf <- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Charlie\", \"David\"),\n  age = c(25, 30, 35, 28),\n  score = c(85, 92, 78, 95)\n)\n\nresult <- df %>%\n  filter(age > 25) %>% # Keep only rows where age > 25\n  mutate(grade = case_when(\n    score >= 90 ~ \"A\",\n    score >= 80 ~ \"B\",\n    TRUE ~ \"C\"\n  )) %>% # Add a new column 'grade' based on score\n  arrange(desc(score)) # Sort by score in descending order\n\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     name age score grade\n1   David  28    95     A\n2     Bob  30    92     A\n3 Charlie  35    78     C\n```\n\n\n:::\n:::\n\n\n\n**Chunk 8:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2) # load the ggplot2 library\n\nggplot(df, aes(x = age, y = score)) + # set the x and y axis\n  geom_point() + # Add scatter plot points\n  geom_smooth(method = \"lm\", se = FALSE) + # Add a linear regression line\n  labs(title = \"Age vs Score\", \n       x = \"Age\", \n       y = \"Score\") # Set plot labels\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](04-code-chunks_files/figure-html/plot-annotation-1.png){width=672}\n:::\n:::\n\n\n\n**Chunk 9:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseq_numbers <- seq(1, 10, by = 2) # Create a sequence from 1 to 10, step 2\nprint(seq_numbers) # print the sequence of number\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 3 5 7 9\n```\n\n\n:::\n:::\n",
    "supporting": [
      "04-code-chunks_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}